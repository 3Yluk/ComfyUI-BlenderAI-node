"""
translations_tuple = (
    (
        ("*", ""),  # (msgctxt, msgid)
        ((), ()),   # (sources, gen_comments)
        ("fr_FR", "Project-Id-Version: ", (False, ("D.", "D.", "D.", "D."))),  # (lang, translation, (is_fuzzy, comments))
    ),
    (
        ("Operator", "Render: Copy Settings"),
        (("bpy.types.SCENE_OT_render_copy_settings",), ()),
        ("fr_FR", "Rendu : copier réglages", (False, ())),
    ),
    (
        ("*", "Copy render settings from current scene to others"),
        (("bpy.types.SCENE_OT_render_copy_settings",), ()),
        ("fr_FR", "Some translation text", (False, ())),
    ),
)

translations_dict = {}
for msg in translations_tuple:
    key = msg[0]  # (msgctxt, msgid)
    for lang, trans, (is_fuzzy, comments) in msg[2:]:  # (lang, translation, (is_fuzzy, comments))
        if trans and not is_fuzzy:
            translations_dict.setdefault(lang, {})[key] = trans
td = {'fr_FR': {
    ('*', ''): 'Project-Id-Version: ',
    ('Operator', 'Render: Copy Settings'): 'Rendu : copier réglages',
    ('*', 'Copy render settings from current scene to others'): 'Some translation text'
}
}
"""

ctxt = "SDN"

other = {
    # SDNode/manager.py
    "Kill Last ComfyUI Process": "关闭上次打开的ComfyUI",
    "ComfyUI Path Not Found": "ComfyUI路径不存在",
    "Server Launching": "服务启动中...",
    "python interpreter not found": "未找到 python解释器",
    "Ensure that the python_embeded located in the same level as ComfyUI dir": "请确保python_embeded文件夹存放于ComfyUI路径同级目录",
    "Model Path": "当前ComfyUI路径",
    "Error: Out of VRam, try restart blender": "错误:显存不足, 请重启blender",
    "Server Launched": "服务启动成功!",
    "Add Task": "添加任务",
    "Server Not Launched, Add Task Failed": "服务未启动, 任务添加失败",
    "Please Check ComfyUI Directory": "请检查ComfyUI路径",
    "Server Not Launched": "服务未启动",
    "Add Result": "获取结果",
    "Submit Task": "提交任务",
    "Invalid Node Connection": "无效节点连接",
    "Node Connection Error": "节点连接错误",
    "Input Image Error": "输入图像错误",
    "Params Not Changed": "参数未变更",
    "Node Tree Not Executed, May Caused by:": "节点树未被执行, 可能原因:",
    "Proc Resutl": "处理结果",
    "Ran Node": "运行节点",
    "ControlNet Init....": "ControlNet 初始化...",
    "ControlNet Init Finished.": "ControlNet 初始化完毕.",
    "If controlnet still not worked, install manually by double clicked {}": "若ControlNet依然无法正常使用, 请手动双击 {} 安装",
    # SDNode/nodes.py
    "icon path load error": "预览图配置解析失败",
    "|IGNORED|": "|已忽略|",
    "Not Found Item": "未找到项",
    "Load": "载入",
    "Params not matching with current node": "参数与当前节点不匹配",
    "Params Loading Error": "参数载入错误",
    "Remove Link": "移除连接",
    "Parsing Node Start": "解析节点中...",
    "Server Launch Failed": "服务启动失败, 使用缓存节点信息数据",
    "None Input": "节点输入",
    "Parsing Node Finished!": "解析节点完成!",
    "Render": "渲染",
    "Post Function": "后处理",
    "Load Preview Image": "加载预览图",
    "  Select mask Objects": "  选中mask物体(可多选)",
    "  Select mask Collections": "  选中mask集合(可多选)",
    "Set Image Path of Render Result(.png)": "设置摄像机渲染图像的保存位置及文件名(.png)，如已设置请忽略",
    "Saved Title Name -> ": "存储名称",
    "Sync Rand" : "统一随机",
    "Render Layer": "渲染层",
    "render_layer": "渲染层",
    "Output Layer": "输出层",
    "out_layers": "输出层",
    "Frames Directory": "序列图文件夹",
    # SDNode/utils.py
    "Gen Mask": "遮罩生成",
    # __init__.py
    "Image not found or format error(png only)": "魔法图鉴不存在或格式不正确(仅png)",
    "Execute Node Tree": "运行节点树",
    "Node Tree": "节点树",
    "Save": "保存",
    "Delete": "删除",
    "Replace Node Tree": "替换节点树",
    "Node Group": "节点",
    "Append Node Group": "追加节点",
    "Pending / Running": "排队 / 运行",
    "Adjust node tree and try again": "请调整后重新执行节点树",
    "Preset Image": "魔法图鉴",
    "Load from Image": "加载魔法图鉴",
    "Preset": "法典",
    "exists, Click Ok to Overwrite!": "已存在, 确认将覆盖!",
    "Click Outside to Cancel!": "单击空白处取消!",
    "will be removed?": "即将消亡?",
    "Click Folder Icon to Select Image:": "点击文件夹图标选择魔法图鉴:",
    "Preset Not Selected!": "没有选择法典!",
    "Invalid Preset Name!": "无效的法典名!",
    "Removed": "移除成功",
    "Presets": "预设",
    "Open NodeGroup Presets Folder": "打开节点预设文件夹",
    "Open NodeTree Presets Folder": "打开节点树预设文件夹",
    "Groups Directory": "节点文件夹",
    "Presets Directory": "预设文件夹",
    "Open Addon Preference": "打开插件设置",
    "Restart ComfyUI": "重启ComfyUI",
    "Launch ComfyUI": "打开ComfyUI",
    "Random All": "随机所有",
    "Preset Name": "法典烙印",
    "Load Preset from Image Error -> MetaData Not Found in": "从图鉴加载失败, 元数据为",
    # prop.py
    "Frame Mode": "渲染模式",
    "SingleFrame": "单帧",
    "MultiFrame": "多帧",
    "Batch": "批量",
    "Batch Directory": "批量处理文件夹",
    # ops.py
    "No NodeTree Found": "节点树为空",
    "Node Not Found: ": "节点未找到",
    "Input Image Node Not Selected!": "未选择输入节点",
    "Batch Directory Not Set!": "批量处理文件夹 不正确",
    "Selected Node: ": "所选节点: ",
    "Node<{}>Directory is Empty!": "节点<{}>的文件夹路径为空!",
    "Node<{}>Directory Not Exists!": "节点<{}>的文件夹路径不存在!",
    "Frame <{}> Not Found in <{}> Node Path!": "帧<{}> 在节点<{}>路径中未找到对应!",
    "Frame <{}> Add to Task!": "帧任务<{}>添加成功!",
    # ui.py
    "ClearTask": "清理任务",
    # preference.py
    "With WEBUI Model": "兼容WEBUI模型",
    "With ComfyUI Model": "兼容ComfyUI模型",
    # MLT
    " Prompts": "提示词",
    "MLT": "多行文本",
    "Enable MLT": "开启多行文本"
}

other_cn_en = {
    
}
lang_text = {
    "zh_CN": {
        **other,
        # 分类
        "latent": "潜空间",
        "advanced": "高级",
        "_for_testing": "测试",
        "upscaling": "缩放",
        "postprocessing": "后处理",
        # 其他
        "text": "文本",
        "filename_prefix": "前缀",
        "output_dir": "输出路径",
        "exe_rand": "每次运行节点随机",
        "enable": "开",
        "disable": "关",
        "samples": "采样",
        "sdn_width": "宽",
        "sdn_height": "高",
        "batch_size": "批次大小",
        "images": "图像",
        "IMAGE": "图像",
        # "vae": "变分数据",
        # "VAE": "变分模型",
        # "nt": "浅空间数据模型",
        # "LATENT": "浅空间数据模型",
        "pixels": "像素",
        # "MASK": "遮罩",
        # Node name
        "KSampler": "K采样器",
        "CheckpointLoader": "Checkpoint加载器",
        "CheckpointLoaderSimple": "Checkpoint简易加载器",
        "CLIPTextEncode": "CLIP文本编码器",
        "CLIPSetLastLayer": "CLIP设置最后一层",
        "VAEDecode": "VAE解码",
        "VAEEncode": "VAE编码",
        "VAEEncodeForInpaint": "VAE内补编码器",
        "VAELoader": "VAE加载器",
        "EmptyLatentImage": "空Latent图像",
        "LatentUpscale": "Latent放大",
        "SaveImage": "保存图像",
        "PreviewImage": "预览图像",
        "LoadImage": "加载图像",
        "LoadImageMask": "加载图像遮罩",
        "ImageScale": "图像缩放",
        "ImageInvert": "图像反转",
        # ？
        "ConditioningCombine": "条件合并",
        "ConditioningSetArea": "条件区域",
        "KSamplerAdvanced": "高级K采样器",
        "SetLatentNoiseMask": "设置Latent噪波遮罩",
        "LatentComposite": "Latent复合",
        "LatentRotate": "Latent旋转",
        "LatentFlip": "Latent翻转",
        "LatentCrop": "Latent修剪",
        "LoraLoader": "Lora加载器",
        "CLIPLoader": "CLIP加载器",
        "CLIPVisionEncode": "CLIP视觉编码",
        "StyleModelApply": "风格模型应用",
        "ControlNetApply": "ControlNet应用",
        "ControlNetLoader": "ControlNet加载器",
        "DiffControlNetLoader": "另一种ControlNet加载器",
        "T2IAdapterLoader": "文生图适配加载器",
        "StyleModelLoader": "风格模型加载器",
        "CLIPVisionLoader": "CLIP视觉加载器",
        "VAEDecodeTiled": "VAE平铺解码",
        "VAEEncodeTiled": "VAE平铺编码",
        # Other
        "Add Node": "添加节点",
        "Add Group": "添加组",
        "sampling": "采样",
        "loaders": "加载器",
        "latnet": "latnet",
        "image": "图像",
        "utils": "实用工具",
        "Reroute": "连线改道",
        # node in
        "model": "模型",
        "positive": "正向条件",
        "negative": "反向条件",
        "latent_image": "latent图像",
        "seed": "随机种",
        "cfg": "cfg",
        "sampler_name": "采样器",
        "scheduler": "调度器",
        "denoise": "降噪",
        "LTAENT": "LTAENT",
        "Value": "值",
        "OK": "确认",
        "add_noise": "添加噪波",
        # ？
        "noise_seed": "噪波随机种",
        "Random seed after every gen": "每次生成后随机化随机种",
        "steps": "步数",
        "start_at_step": "开始步数",
        "end_at_step": "结束步数",
        # ？
        "return_with_leftover_noise": "返回残余噪波",
        "config_name": "配置名称",
        "ckpt_name": "ckpt名称",
        "MODEL": "模型",
        # ？
        "CLIP": "CLIP",
        "VAE": "VAE",
        "vae_name": "vae名称",
        "clip": "CLIP",
        "strength_model": "模型强度",
        "strength_clip": "CLIP强度",
        "undefined": "未定义",
        "control_net_name": "controlnet名称",
        "CONTROL_NET": "CONTROLNET",
        "t2i_adapter_name": "文生图适配器名称",
        "style_model_name": "风格模型名称",
        "STYLE_MODEL": "风格模型",
        "clip_name": "CLIP名称",
        "CLIP_VISION": "视觉CLIP",
        "model_name": "模型名称",
        "UPSCALE_MODEL": "放大模型",
        "style_model": "风格模型",
        # ?
        "clip_vision": "视觉CLIP",
        "CLIP_VISION_OUTPUT": "视觉CLIP输出",
        "clip_vision_output": "视觉CLIP输出",
        "conditioning": "条件",
        "stop_at_clip_layer": "停止在clip层",
        "conditioning_1": "条件1",
        "conditioning_2": "条件2",
        "witch": "宽",
        "height": "高",
        "strength": "强度",
        "control_net": "controlnet",
        "inpaint": "内补绘制",
        "transform": "变换",
        "CONDITIONING": "条件",
        "unCLIPCheckpointLoader": "逆CLIPCheckpoint加载器",
        "UpscaleModelLoader": "放大模型加载器",
        "unCLIPConditioning": "逆CLIP条件",
        "noise_augmentation": "噪波增强",
        "90 degrees": "90度",
        "180 degrees": "180度",
        "270 degrees": "270度",
        "flip_method": "翻转方法",
        "x-axis: vertically": "X轴:垂直",
        "y-axis: horizontally": "Y轴:水平",
        "crop": "裁剪",
        "nearest-exact": "邻近-精确",
        "bilinear": "双线性",
        # ？
        "feather": "羽化",
        "samples_to": "采样到",
        "samples_from": "采样自",
        "ImageUpscaleWithModel": "图像通过模型放大",
        "upscale_model": "放大模型",
        "ImageBlend": "图像混合",
        "blend_factor": "混合系数",
        "blend_mode": "混合模式",
        "image1": "图像1",
        "image2": "图像2",
        "overlay": "叠加",
        "soft_light": "柔光",
        "ImageBlur": "图像模糊",
        "blur_radius": "模糊半径",
        "ImageQuantize": "图像量化",
        "colors": "颜色数",
        "dither": "抖动",
        "floyd-steinberg": "弗洛伊德-斯坦伯格抖动算法",
        "ImageSharpen": "图像锐化",
        "sharpen_radius": "锐化半径",
        "ImagePadForOutpaint": "外补绘画填充画板",
        "feathering": "羽化",
        # ？token merging
        "TomePatchModel": "Token合并修补模型",
        "preprocessors": "预处理器",
        "edge_line": "边缘线",
        "pose": "姿态",
        "normal_depth_map": "法向深度映射",
        "semseg": "语义分割",
        "face_mesh": "面部网格",
        "color_style": "颜色风格",
        "CannyEdgePreprocessor": "Canny(细致线)预处理器",
        "low_threshold": "低阈值",
        "high_threshold": "高阈值",
        "l2gradient": "L2范数",
        "M-LSDPreprocessor": "M-LSD(线段)预处理器",
        # ？
        "score_threshold": "刻痕阈值",
        "dist_threshold": "距离阈值",
        # Holistically-Nested Edge Detection
        "HEDPreprocessor": "HED(模糊线)预处理器",
        "ScribblePreprocessor": "Scribble(涂鸦线)预处理器",
        "FakeScribblePreprocessor": "FakeScribble(伪涂鸦)预处理器",
        "BinaryPreprocessor": "Binary二值化预处理器",
        # Pixel Difference Networks for Efficient Edge Detection
        "PiDiNetPreprocessor": "PidiNet(模糊线)预处理器",
        "OpenposePreprocessor": "Openpose(姿态)预处理器",
        "MediaPipe-HandPosePreprocessor": "MediaPipe-HandPose(手部姿态)预处理器",
        "detect_pose": "检测姿态",
        "detect_hand": "检测手部",
        "detect_hands": "检测手部",
        "MiDaS-DepthMapPreprocessor": "MiDaS-DepthMap(深度映射)预处理器",
        "MiDaS-NormalMapPreprocessor": "MiDaS-NormalMap(法向映射)预处理器",
        "bg_threshold": "背景阈值",
        "LeReS-DepthMapPreprocessor": "LeReS-DepthMap(深度映射)预处理器",
        "rm_nearest": "前景移除",
        "rm_background": "背景移除",
        "SemSegPreprocessor": "SemSeg(语义分割)预处理器",
        "MediaPipe-FaceMeshPreprocessor": "MediaPipe-FaceMesh(面部网格)预处理器",
        "max_faces": "最大面数",
        "min_confidence": "最小置信度",
        "ColorPreprocessor": "Color颜色预处理",
        "lora_name": "lora名称",
        "LatentCompositeMasked": "Latent遮罩复合",
        "MaskToImage": "遮罩转图像",
        "ImageToMask": "图像转遮罩",
        "SolidMask": "纯块遮罩",
        "InvertMask": "反转遮罩",
        "CropMask": "遮罩裁剪",
        "MaskComposite": "遮罩混合",
        "FeatherMask": "羽化遮罩",
        "DiffusersLoader": "Diffusers(扩散)载入器",
        "model_path": "模型路径",
        "GLIGENLoader": "GLIGEN加载器",
        "gligen_name": "GLIGEN名称",
        "gligen": "GLIGEN基于语言的图像生成",
        "safe": "增稳",
        "LatentFromBatch": "从批次获取Latent",
        "GLIGENTextBoxApply": "GLIGEN文本框应用",
        "conditioning_to": "条件到",
        "gligen_textbox_model": "GLIGEN文本框模型",
        "HED-v11-Preprocessor": "HED(模糊线)-v11-预处理器",
        "PiDiNet-v11-Preprocessor": "PidiNet(模糊线)-v11-预处理器",
        "BAE-NormalMapPreprocessor": "BAE-NormalMap(法向映射)预处理器",
        "Zoe-DepthMapPreprocessor": "Zoe-DepthMap(深度映射)预处理器",
        "left": "左",
        "top": "上",
        "right": "右",
        "bottom": "下",
        "batch_index": "批次索引",
        "normal": "通用",
        "ratio": "比率",
        "rotation": "旋转",
        "destination": "目标",
        "source": "源",
        "upscale_method": "放大方法",
        "sigma": "sigma西格玛系数",
        "channel": "通道",
        "value": "明度",
        "version": "版本",
        "threshold": "阈值",
        "detect_body": "检测身体",
        "detect_face": "检测面部",
        "HypernetworkLoader": "超网络加载器",
        "hypernetwork_name": "超网络名称",
        "LineArtPreprocessor": "LineArt艺术线条预处理器",
        "AnimeLineArtPreprocessor": "AnimeLineArt动漫艺术线条预处理器",
        "Manga2Anime-LineArtPreprocessor": "Manga2Anime-LineArt漫画转动漫-艺术线条预处理器",
        "coarse": "粗糙化",
        "UniFormer-SemSegPreprocessor": "UniFormer-SemSeg语义分割预处理器",
        "OneFormer-COCO-SemSegPreprocessor": "OneFormer-COCO-SemSeg语义分割预处理器",
        "OneFormer-ADE20K-SemSegPreprocessor": "OneFormer-ADE20K-SemSeg语义分割预处理器",
        "tile": "平铺",
        "TilePreprocessor": "平铺预处理器",
        "pyrUp_iters": "向上采样迭代",
        #更新
        "batch": "批次",
        "ConditioningAverage ": "条件平均",
        "conditioning_from": "条件源",
        "conditioning_to_strength": "采样到强度",
        "ConditioningSetMask": "条件设置遮罩",
        "set_cond_area": "设置条件区域",
        "mask bounds": "遮罩边界",
        "grow_mask_by": "遮罩延展",
        "LatentUpscaleBy": "Latent按系数缩放",
        "scale_by": "缩放倍数",
        "SaveLatent": "保存Latent",
        "LoadLatent": "读取Latent",
        "RebatchLatents": "重设批次",
        "RepeatLatentBatch": "复制批次",
        "amount": "次数",
        #插件
        #ComfyUI_TiledKSampler
            "BNK_TiledKSampler": "分块K采样器",
            "BNK_TiledKSamplerAdvanced": "分块高级K采样器",
        #advanced_encode
            "BNK_CLIPTextEncodeAdvanced": "高级CLIP文本编码器",
                "token_normalization": "Token规格化",
                "weight_interpretation": "权重插值方式",
                "none": "无",
                "mean": "平均",
                "length": "长度",
                "length+mean": "混合",
            "BNK_MixCLIPEmbeddings": "条件混合",
                "mix": "系数",
                "cond1": "条件1",
                "cond2": "条件2",
        #clip_seg
            "CLIPSeg": "CLIP语义分割",
                "Mask": "遮罩",
                "Heatmap Mask": "热度图",
                "BW Mask": "灰度图",
                "blur": "模糊",
                "dilation_factor": "膨胀",
            "CombineSegMasks": "合并分割遮罩",
                "Combined Mask": "被合并遮罩",
                "input_image": "图像",
                "mask_1": "遮罩1",
                "mask_2": "遮罩2",
                "mask_3": "遮罩3",
        #Comfyui_Noise
        #需要把nodes.py里的line 9的"import comfy.sample"改成"import comfy.samplers"
            "BNK_NoisyLatentImage": "噪波Latent图像",
            "BNK_DuplicateBatchIndex": "复制批次索引",
                "latents": "Latent",
            "BNK_SlerpLatent": "Latent混合",
                "factor": "系数",
                "latents1": "Latent1",
                "latents2": "Latent2",
                "mask": "遮罩",
            "BNK_GetSigma": "获取Sigma",
            "BNK_InjectNoise": "添加噪波",
                "noise": "噪波",
            "BNK_Unsampler": "逆采样器",
                "normalize": "规格化",
        #Comfyui_Cutoff
            "cutoff": "截断",
            "CLIPRegionsBasePrompt": "截断基础prompt",
                "CLIPREGION": "CLIP范围",
            "CLIPSetRegion": "截断范围",
                "region_text": "范围",
                "target_text": "目标",
                "weight": "权重",
                "clip_regions": "CLIP范围",
            "CLIPRegionsToConditioning": "截断范围到条件",
                "mask_token": "token遮罩",
                "strict_mask": "严格范围",
                "start_from_masked": "从区域开始",
            "CLIPRegionsToConditioningADV": "高级截断范围到条件",
        #ComfyUI-post-processing-nodes
        #Class PixelSort与BlenderComfyui不兼容，没找原因，直接删了
            "Blends": "混合",
            "ArithmeticBlend": "简易混合",
                "add": "相加",
                "subtract": "相减",
                "difference": "差值",
            #占位
                "multiply": "相乘",
            "Dissolve": "消融",
                "dissolve_factor": "系数",
            "DodgeAndBurn": "减淡加深",
                "intensity": "强度",
                "dodge": "减淡",
                "burn": "加深",
                "dodge_and_burn": "减淡后加深",
                "burn_and_dodge": "加深后减淡",
                "color_dodge": "颜色减淡",
                "color_burn": "颜色加深",
                "linear_dodge": "线性减淡",
                "linear_burn": "线性加深",
            "AsciiArt": "Ascii字符",
                "char_size": "字符间距",
                "font_size": "字符大小",
            "ChromaticAberration": "色差偏移",
                "red_shift": "红色偏移",
                "red_direction": "红色偏移方向",
                "green_shift": "绿色偏移",
                "green_direction": "绿色偏移方向",
                "blue_shift": "蓝色偏移",
                "blue_direction": "蓝色偏移方向",
                "horizontal": "平行",
                "vertical": "竖直",
            "FilmGrain": "胶片",
                "scale": "缩放",
                "temperature": "温度",
                "vignette": "暗角",
            "Glow": "泛光",
            "PencilSketch": "素描",
                "sharpen_alpha": "透明阈值",
            "Pixelize": "像素化",
                "pixel_size": "像素大小",
            "SineWave": "正弦波",
                "amplitude": "强度",
                "frequency": "频率",
                "direction": "方向",
            "Vignette": "暗角",
            #def INPUT_TYPES里的required的a改成vignette
            #被filmgrain完全替代
                "vignette": "暗角",
            "KuwaharaBlur": "Kuwahara模糊",
                "method": "方法",
                "gaussian": "高斯",
            "Sharpen": "锐化",
            #def sharpen里的sharpen_radius改成blur_radius
                "alpha": "透明 ",
            "CannyEdgeMask": "Canny边缘遮罩",
            #被canny预处理器完全替代
            "HSVThresholdMask": "HSV阈值遮罩",
                "hsv_channel": "通道",
            "Color Adjustments": "颜色调整",
                "hue": "色调",
                "brightness": "明度",
                "contrast": "对比度",
                "saturation": "饱和度",
                "gamma": "伽马",
            "ColorCorrect": "颜色校正",
            "ColorTint": "颜色过渡",
                "mode": "模式",
                "sepia": "褐色",
                "red": "红色",
                "green": "绿色",
                "blue": "蓝色",
                "cyan": "青色",
                "magenta": "品红",
                "yellow": "黄色",
                "purple": "紫色",
                "orange": "橙色",
                "warm": "暖色",
                "coll": "冷色",
                "lime": "橙绿",
                "navy": "深蓝",
                "vintage": "复古",
                "rose": "淡红",
                "teal": "深青",
                "maroon": "红褐",
                "peach": "桃色",
                "lavender": "淡紫",
                "olive": "黄绿",
            "Parabolize": "抛物线",
                "coeoff": "系数",
                "vertex_x": "端点X",
                "vertex_y": "端点Y",
            "Quantize": "量化",
            #与图像量化完全相同
            "Solarize": "颜色反转",
        #images-grid-comfy-plugin
            "ImagesGrid": "图表",
            "LatentCombine": "Latent组合",
                "latent_1": "Latent1",
                "latent_2": "Latent2",
            "ImagesGridByColumns": "由列建表",
                "gap": "间隔",
                "max_columns": "最大列数",
                "annotation": "注释",
            "ImagesGridByRows": "由行建表",
                "max_rows": "最大行数",
            "ImageCombine": "图像组合",
                "image_1": "图像1",
                "image_2": "图像2",
            "GridAnnotation": "图表注释",
                "column_texts": "列注释",
                "rows_texts": "行注释",
        #ImpactPack
        #有些节点需要advanced_encode和ComfyUI_TiledKSampler
        "ImpactPack": "Impact节点",
            "Util": "实用工具",
                "CLIPSegDetectorProvider": "CLIPSeg检测器",
                    "BBOX_DETECTOR": "BBox检测",
                "EmptySegs": "空Seg",
                "PreviewBridge": "预览桥接",
                    "MASK": "遮罩",
            #占位
                "BitwiseAndMaskForEach": "Seg位操作",
                    "base_segs": "基础seg",
                    "mask_segs": "遮罩seg",
                "SubtractMaskForEach": "Seg相减",
                "BitwiseAndMask": "遮罩位操作",
                    "mask1": "遮罩1",
                    "mask2": "遮罩2",
                "SubtractMask": "遮罩相减",
                "Segs & Mask": "Seg与遮罩",
                "MaskToSEGS": "遮罩到Seg",
                    "combined": "是否合并",
                    "crop_factor": "系数",
                    "bbox_fill": "填充BBox",
                    "disabled": "关闭",
                    "enabled": "开启",
                    "drop_size": "大小",
                "ToBinaryMask": "二值化遮罩",
                "SegsToCombinedMask": "Seg到遮罩",
            "Detailer": "细化",
                "DetailerForEach": "局部细化",
                    "guide_size": "引导大小",
                    "guide_size_for": "引导目标",
                        "crop_region": "全局",
                    "noise_mask": "仅生成遮罩",
                    "force_inpaint": "强制重绘",
                "DetailerForEachDebug": "高级局部细化",
                    "cropped": "裁剪图像",
                    "cropped_refined": "细化图像",
                "DetailerForEachPipe": "局部细化节点束",
                    "basic_pipe": "基础节点束",
                "DetailerForEachDebugPipe": "高级局部细化节点束",
            "Detector": "检测器",
                "SAMDetectorCombined": "SAM语义提取",
                    "detection_hint": "检测提示",
                        "center-1": "中心",
                        "horizontal-2": "水平",
                        "vertical-2": "竖直",
                        "rect-4": "斜角",
                        "diamond-4": "菱形",
                        "mask-area": "遮罩区域",
                        "mask-points": "遮罩点",
                        "mask-point-bbox": "遮罩点的BBox",
                        "sam_model": "SAM模型",
                    "dilation": "膨胀",
                    "bbox_expansion": "BBox扩展",
                    "mask_hint_threshold": "遮罩检测阈值",
                    "mask_hint_use_negative": "反向遮罩提示",
                        "outter": "外侧",
                "BboxDetectorSEGS": "BBox检测到Seg",
                    "bbox_detector": "BBox检测",
                "SegmDetectorSEGS": "Segm检测到Seg",
                    "segm_detector": "Segm检测",
                "ONNXDetectorSEGS": "ONNX检测到Seg",
                    "onnx_detector": "ONNX检测器",
            #占位
                "FaceDetailer": "面部细化",
                    "detailer_pipe": "细化节点束",
                    "bbox_threshold": "BBox阈值",
                    "bbox_dilation": "BBox膨胀",
                    "bbox_crop_fator": "BBox裁剪系数",
                    "sam_detection_hint": "SAM检测提示",
                    "sam_dilation": "SAM膨胀",
                    "sam_threshold": "SAM阈值",
                    "sam_bbox_expansion": "SAM扩展",
                    "sam_mask_hint_threshold": "SAM提示阈值",
                    "sam_model_opt": "SAM模型",
                "FaceDetailerPipe": "面部细化节点束",
            "Pipe":"节点束",
                "ToDetailerPipe": "到细化节点束",
                "FromDetailerPipe": "从细化节点束",
                "ToBasicPipe": "到基础节点束",
                "FromBasicPipe": "从基础节点束",
                "BasicPipeToDetailerPipe": "基础节点束到细化节点束",
                "DetailerPipeToBasicPipe": "细化节点束到基础节点束",
                "EditBasicPipe": "编辑基础节点束",
                "EditDetailerPipe": "编辑细化节点束",
            "Upscale": "放大",
                "LatentPixelScale": "Latent像素缩放",
                    "scale_method": "缩放方法",
                        "scale_factor": "缩放系数",
                    "use_tiled_vae": "使用分块vae",
                    "upscale_model_opt": "放大模型",
                "PixelKSampleUpscalerProvider": "K采样像素缩放器",
                    "Upscaler": "缩放器",
                    "UPSCALER": "缩放器",
                    "pk_hook_opt": "约束",
                "PixelKSampleUpscalerProviderPipe": "K采样像素缩放器节点束",
                "IterativeLatentUpscale": "Latent迭代缩放",
                    "upscale_factor": "缩放系数",
                    "upscaler": "缩放器",
                "IterativeImageUpscale": "图像迭代缩放",
                "PixelTiledKSampleUpscalerProvider": "分块K采样像素缩放器",
                    "tile_width": "分块宽度",
                    "tile_height": "分块高度",
                    "tiling_strategy": "无缝分块策略",
                        "random": "随机",
                        "padded": "分区",
                        "simple": "简易",
                "PixelTiledKSampleUpscalerProviderPipe": "分块K采样像素缩放器节点束",
                "TwoSamplersForMaskUpscalerProvider": "双采样遮罩缩放器",
                    "full_sample_schedule": "调度器",
                        "interleave1": "交错1",
                        "interleave2": "交错2",
                        "interleave3": "交错3",
                        "last1": "连续1",
                        "last2": "连续2",
                        "interleave1+last1": "交错1+连续1",
                        "interleave2+last1": "交错2+连续1",
                        "interleave3+last1": "交错3+连续1",
                    "base_sample": "基础采样",
                    "mask_sample": "遮罩采样",
                    "full_sample_opt": "全局采样",
                    "pk_hook_base": "基础约束",
                    "pk_hook_mask": "遮罩约束",
                    "pk_hook_full": "全局约束",
                "TwoSamplersForMaskUpscalerProviderPipe": "双采样遮罩缩放器节点束",
                "PixelKSampleHookCombine": "约束组合",
                    "PK_HOOK": "约束",
                    "hook1": "约束1",
                    "hook2": "约束2",
                "DenoiseScheduleHookProvider": "降噪约束器",
                    "schedule_for_iteration": "调度插值",
                    "target_denoise": "目标降噪",
                "CfgScheduleHookProvider": "CFG约束器",
                    "target_cfg": "目标CFG",
            "Legacy": "旧版",
                "BboxDetectorCombined": "BBox检测器旧版",
                    "bbox_model": "BBox模型",
                "SegmDetectorCombined": "Segm检测器旧版",
                    "segm_model": "Segm模型",
                "MaskPainter": "绘制遮罩",
                "MMDetLoader": "MMDet加载器",
                    "BBOX_MODEL": "BBox模型",
                    "SEGM_MODEL": "Segm模型",
                "SegsMaskCombine": "Seg遮罩合并",
                    "segs": "Seg",
                "BboxDetectorForEach": "BBox单独检测器旧版",
                "SegmDetectorForEach": "Segm单独检测器旧版",
            "Sampler": "采样器",
                "KSamplerProvider": "K采样器节点束",
                "TwoSamplersForMask": "遮罩双采样器",
                "TiledKSamplerProvider": "分块K采样器节点束",
            "SAMLoader": "SAM加载器",
                "SAM_MODEL": "SAM模型",
            "MMDetDetectorProvider": "MMDet加载器",
                "BBOX_DETECTOR": "BBox检测",
                "SEGM_DETECTOR": "Segm检测",
            "ONNXDetectorProvider": "ONNX加载器",
                "ONNX_DETECTOR": "ONNX检测",
        #Efficiency Nodes
        "Efficiency Nodes": "效率节点",
            "KSampler (Efficient)": "效率K采样器",
                "CONDITIONING+": "正向条件",
                "CONDITIONING-": "反向条件",
                "sampler_state": "采样状态",
                "preview_image": "是否输出图像",
                "optional_vae": "VAE",
                "script": "脚本",
            "Loaders": "加载器",
            "Efficient Loader": "效率加载器",
                "lora_model_strength": "lora模型强度",
                "lora_clip_strength": "loraCLIP强度",
                "empty_latent_width": "空Latent宽度",
                "empty_latent_height": "空Latent高度",
            "XY Plot": "XY图表",
                "X_type": "X轴类型",
                    "Latent Batch": "Latent",
                    "Seeds++ Batch": "随机种",
                    "CFG Scale": "CFG",
                    "Scheduler": "调度器",
                "X_value": "X轴值",
                "Y_type": "Y轴类型",
                "Y_value": "Y轴值",
                "grid_spacing": "间隔",
                "XY_flip": "XY互换",
                "latent_id": "Latent索引",
                "help": "使用说明",
            "Image Overlay": "图像覆盖",
                "overlay_resize": "缩放模式",
                    "Resize by rescale_factor": "按系数",
                    "Resize to width & heigth": "按宽高",
                "resize_method": "缩放方法",
                    "area": "区域",
                "rescale_factor": "缩放系数",
                "x_offset": "X偏移",
                "y_offset": "Y偏移",
                "opacity": "不透明度",
                "base_image": "基础图像",
                "overlay_image": "覆盖图像",
                "optional_mask": "遮罩",
            "Evaluate Integers": "整数运算",
                "python_expression": "Python表达式",
                "print_to_console": "输出至控制台",
            "Evaluate Strings": "字符串运算",
    }
}
cat = {'default_real': None,
       'default': '*',
       'operator_default': 'Operator',
       'ui_events_keymaps': 'UI_Events_KeyMaps',
       'plural': 'Plural',
       'id_action': 'Action',
       'id_armature': 'Armature',
       'id_brush': 'Brush',
       'id_camera': 'Camera',
       'id_cachefile': 'CacheFile',
       'id_collection': 'Collection',
       'id_curve': 'Curve',
       'id_fs_linestyle': 'FreestyleLineStyle',
       'id_gpencil': 'GPencil',
       'id_curves': 'Curves',
       'id_id': 'ID',
       'id_image': 'Image',
       'id_shapekey': 'Key',
       'id_light': 'Light',
       'id_library': 'Library',
       'id_lattice': 'Lattice',
       'id_mask': 'Mask',
       'id_material': 'Material',
       'id_metaball': 'Metaball',
       'id_mesh': 'Mesh',
       'id_movieclip': 'MovieClip',
       'id_nodetree': 'NodeTree',
       'id_object': 'Object',
       'id_paintcurve': 'PaintCurve',
       'id_palette': 'Palette',
       'id_particlesettings': 'ParticleSettings',
       'id_pointcloud': 'PointCloud',
       'id_lightprobe': 'LightProbe',
       'id_scene': 'Scene',
       'id_screen': 'Screen',
       'id_sequence': 'Sequence',
       'id_simulation': 'Simulation',
       'id_speaker': 'Speaker',
       'id_sound': 'Sound',
       'id_texture': 'Texture',
       'id_text': 'Text',
       'id_vfont': 'VFont',
       'id_volume': 'Volume',
       'id_world': 'World',
       'id_workspace': 'WorkSpace',
       'id_windowmanager': 'WindowManager',
       'editor_view3d': 'View3D'
       }

translations_dict = {}
for cultral, translations in lang_text.items():
    translations_dict[cultral] = {}
    for word, translation in translations.items():
        translations_dict[cultral][(ctxt, word)] = translation
        translations_dict[cultral][(None, word)] = translation
